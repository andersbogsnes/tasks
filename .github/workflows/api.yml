name: API Test and Deploy
on:
  push:
    paths:
      - 'services/tasks_api/**'
      - '.github/workflows/api.yml'

env:  # new
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: eu-north-1
  APP_ENVIRONMENT: development

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/tasks_api
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install -e ".[dev]"
      - name: Run tests
        run: pytest tests --cov=./ --cov-report=xml
  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/tasks_api
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install ".[dev]"
      - name: Run black
        run: black . --check
      - name: Run isort
        run: isort . --check-only
      - name: Run ruff
        run: ruff .
      - name: Run bandit
        run: bandit .
  deploy-development:
    needs: [ tests, code-quality ]
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]
        node-version: [ 16 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: services/tasks_api
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Serverless Framework
        run: npm install -g serverless
      - name: Install NPM dependencies
        run: npm install
      - name: Deploy
        run: sls deploy --stage development --verbose